metadata {
  authority_id: iso
  id: 1996-method2
  language: iso-639-2:kor
  source_script: Hang
  destination_script: Latn
  name: "ISO/TR 11941:1996 Information and documentation — Transliteration of Korean script into Latin characters"
  url: https://www.iso.org/standard/20564.html
  creation_date: 1996
  adoption_date:
  description: Establishes a system for the transliteration of the characters of Korean script into Latin characters. Intended to provide a means for international communication of written documents.
  
  notes: ""
}

tests {
  # Tests from https://www.eki.ee/wgrs/rom2_ko.pdf
  test "꽃이", "ggoc'i" # Bad OCR
  test "강에", "gang'e"
  test "앉아라", "anj'ara"
  test "아까", "a'gga"
  test "흰떡", "hyin'ddeog"
  #- source: "유쾌하다" not present in method2
  #  expected: "yu'khwaehata"
  # Tests from https://github.com/interscript/interscript/files/5249245/ISO-TR-11941-1996.pdf
  test "애기", "aegi"
  test "방", "bang"
  test "아이", "a'i"
  test "고양이", "go'yang'i"
  test "굽이", "gub'i"
  test "밖에", "bagg'e"
  test "박게", "bagge"
  test "바께", "ba'gge"
  test "간게", "gange"
  test "안자라", "anjara"
  test "오빠", "o'bba"
  test "어찌", "eo'jji"
  test "아씨", "a'ssi"
}

# This map has been partially converted by the bin/maps_v1_to_v2 script
# The section below requires human attention. Remember to remove this
# comment and move the converted map to 'maps/' directory. Please also
# take note that the maps-staging directory will be cleaned up whenever
# you run the bin/maps_v1_to_v2 script. You should particularly be
# concerned about any regular expressions found in this file and about
# advanced expressions in parallel {} parts, and also about the order
# of particular parts of the stage.

dependency "var-kor-Hang-Hang-jamo", as: hanghang


stage {

  run map.hanghang.stage.main

  # RULES
  

  # POSTRULES
  # Add space to the two ends of the string for easier word boundary handling
  sub "^", " "
  sub "$", " "
  
  # Marks A, B, C
  sub "(?<!\\p{Hangul})ᄋ", "" # Word initially
  sub "ᄋ", "'" # See notes 2, 3 and 4.
  sub "ᆼ", "ng" # At the end of a syllable.
  
  # Note 4: add apostrophe before 5 double consonants at initial position
  #         unless start of the word
  sub "(?<=\\p{Hangul})([ᄁᄄᄈᄍᄊ])", "'\\1"
  # Note 4: (only method 1) same but with 4 aspirated
  #- pattern: "(?<=\\p{Hangul})([ᄏᄐᄑᄎ])"
  #  result: "'\\1"
  
  # Consonants differing between method1 and method2
  sub "[ᄀᆨ]", "g"
  sub "[ᄏᆿ]", "k"
  sub "[ᄁᆩ]", "gg"
  sub "[ᄃᆮ]", "d"
  sub "[ᄐᇀ]", "t"
  sub "[ᄄퟍ]", "dd"
  sub "[ᄇᆸ]", "b"
  sub "[ᄑᇁ]", "p"
  sub "[ᄈퟦ]", "bb"
  sub "[ᄌᆽ]", "j"
  sub "[ᄎᆾ]", "c"
  sub "[ᄍퟹ]", "jj"
  # End
  
  # Composite differing consonants (cons. https://en.wikipedia.org/wiki/ISO/TR_11941 )
  sub "[ᆪ]", "gs"
  sub "[ꥤ]", "rg" # D. R at the beginning of a syllable
  sub "[ᆰ]", "lg"
  sub "[ᆴ]", "lt"
  sub "[ꥩ]", "rb" # D. R at the beginning of a syllable
  sub "[ᆲ]", "lb"
  sub "[ᆵ]", "lp"
  sub "[ᅜᆬ]", "nj"
  sub "[ᄡᆹ]", "bs"
  # End
  
  # Other consonants
  sub "[ᄉᆺ]", "s"
  sub "[ᄊᆻ]", "ss"
  sub "[ᄒᇂ]", "h"
  sub "[ᄂᆫ]", "n"
  sub "[ᄅ]", "r" # D. R at the beginning of a syllable.
  sub "[ᆯ]", "l"
  sub "[ᄆᆷ]", "m"
  # End
  
  # Other composite consonants (cons. https://en.wikipedia.org/wiki/ISO/TR_11941 )
  sub "[ꥬ]", "rs" # D. R at the beginning of a syllable
  sub "[ᆳ]", "ls"
  sub "[ꥨ]", "rm" # D. R at the beginning of a syllable
  sub "[ᆱ]", "lm"
  sub "[ᄚ]", "rh" # D. R at the beginning of a syllable
  sub "[ᆶ]", "lh"
  sub "[ᅝᆭ]", "nh"
  # End
  
  # Vowels
  sub "ᅡ", "a"
  sub "ᅥ", "eo"
  sub "ᅩ", "o"
  sub "ᅮ", "u"
  sub "ᅳ", "eu"
  sub "ᅵ", "i"
  sub "ᅢ", "ae"
  sub "ᅦ", "e"
  sub "ᅬ", "oe"
  sub "ᅣ", "ya"
  sub "ᅧ", "yeo"
  sub "ᅭ", "yo"
  sub "ᅲ", "yu"
  sub "ᅤ", "yae"
  sub "ᅨ", "ye"
  sub "ᅪ", "wa"
  sub "ᅯ", "weo"
  sub "ᅱ", "wi"
  sub "ᅫ", "wae"
  sub "ᅰ", "we"
  sub "ᅴ", "yi"
  # End
  
  # Remove space added
  sub "^ ", ""
  sub " $", ""
  

  # CHARACTERS
  parallel {
    # This is based on Jamo
    
  }

  # DICTIONARY
  parallel {
    #
  }

}


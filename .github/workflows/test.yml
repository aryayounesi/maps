name: test

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build:
    name: Run specs on ${{ matrix.os }} ruby ${{ matrix.ruby }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        ruby: ['2.7', '2.6', '2.5', '2.4']
        python: ['3.8']
        experimental: [false]
        include:
          - ruby: '3.0'
            os: ubuntu-latest
            python: '3.8'
            experimental: true
          - ruby: '3.0'
            os: macos-latest
            python: '3.8'
            experimental: true
          - ruby: '3.0'
            os: windows-latest
            python: '3.8'
            experimental: true

    steps:
      - uses: actions/checkout@master

      - name: Use Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: x64

      - name: set PIP_DOWNLOAD_CACHE
        shell: python
        run: |
          import os
          import platform
          from os.path import expanduser

          home = expanduser("~")
          cache_path = {
            "Linux": f"{home}/.cache/pip",
            "Darwin": f"{home}Library/Caches/pip",
            "Windows": f"{home}\\AppData\\Local\\pip\\Cache"
          }[platform.system()]

          os.system(f"echo PIP_DOWNLOAD_CACHE={cache_path} >> {os.environ['GITHUB_ENV']}")

      - uses: actions/cache@v2
        with:
          path: ${{ env.PIP_DOWNLOAD_CACHE }}
          key: ${{ runner.os }}-${{ matrix.python }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-${{ matrix.python }}-pip-

      - name: Install ubuntu dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install swig python3-setuptools

      - name: Install macos dependencies
        if: matrix.os == 'macos-latest'
        run: brew install swig

      - name: Install windows dependencies
        if: matrix.os == 'windows-latest'
        uses: nick-invision/retry@v1
        with:
          polling_interval_seconds: 5
          timeout_minutes: 5
          max_attempts: 3
          command: choco install --no-progress swig --version 4.0.1

      - name: Update Sequitur
        run: |
          pip3 install -r requirments.txt

      - name: Run RSpecs
        run: |
          bundle exec parallel_split_test spec/
